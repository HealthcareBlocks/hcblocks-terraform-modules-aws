name: "dispatch/Release new versions"
on:
  repository_dispatch:
    types: [monorepo_release]

jobs:
  tag:
    runs-on: ubuntu-latest
    name: "Tag Releases"
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@v4

      - name: tag changes
        env:
          CLIENT_PAYLOAD: ${{ toJSON(github.event.client_payload) }}
        run: |
          $payload = $env:CLIENT_PAYLOAD | convertfrom-json

          $message = git show -s --format=%s "$($payload.sha)"
          $description = git show -s --format=%b "$($payload.sha)"

          if ([string]::IsNullOrEmpty($description)) {
            $description = '-'
          }

          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          $payload.releases | ForEach-Object {
              $branchName = "tmp_$($_.module)_$($_.newVersion)"
              $tag = "$($_.module)/$($_.newVersion)"
              $module = $($_.module)
              $previousTag = "$($_.module)/$($_.prevVersion)"
              $major = $($_.newVersion).Substring(1).Split('.')[0]
              $minor = $($_.newVersion).Substring(1).Split('.')[1]
              $majorTag = "$($module)/v$($major)"
              $minorTag = "$($module)/v$($major).$($minor)"

              git checkout "$($payload.sha)"

              Copy-Item -Path $module `
                        -Destination "./_workingtmp/" `
                        -Recurse `
                        -Force

              if (git tag -l "$previousTag")
              {
                  git checkout "$previousTag"
              }

              git checkout -b "$branchName"

              Get-ChildItem -Exclude "_workingtmp" `
                  | Remove-Item -Recurse `
                                -Force

              Copy-Item -Path "_workingtmp/*" `
                        -Destination ./ `
                        -Recurse `
                        -Force

              Remove-Item -LiteralPath "_workingtmp" `
                          -Force `
                          -Recurse

              git rm -r ".github"

              git add .
              git commit -a -m "$message" -m "$description"
              git tag "$tag" -m "$message" -m "$description"
              git tag -fa "$majorTag" -m "$message" -m "$description"
              git tag -fa "$minorTag" -m "$message" -m "$description"
              git push origin "$tag"
              git push origin "$minorTag" -f
              git push origin "$majorTag" -f
              git checkout main
          }
